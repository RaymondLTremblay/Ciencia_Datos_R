filter(location=="Puerto Rico")
COVID_DATA %>%
filter(location=="Puerto Rico")
COVID_DATA %>%
filter(location=="Puerto Rico")
COVID_DATA %>%
filter(location=="Puerto Rico")
head(n=20
COVID_DATA %>%
COVID_DATA %>%
filter(location=="Puerto Rico") %>%
head(n=20)
COVID_DATA %>%
filter(location=="Puerto Rico") %>%
arrange(date) %>%
head(n=20)
install.packages(c("AER", "afex", "boot", "broom.helpers", "cards", "caTools", "chromote", "cpp11", "curl", "data.table", "datawizard", "DescTools", "dfidx", "emmeans", "EnvStats", "gap", "gdtools", "geometry", "ggeffects", "ggfun", "ggrepel", "gmp", "gtsummary", "hexbin", "httr2", "insight", "jtools", "matrixStats", "mboost", "MCMCpack", "microbenchmark", "mvtnorm", "openxlsx", "parameters", "performance", "PMCMRplus", "ragg", "RANN", "RcppArmadillo", "RcppEigen", "rvg", "segmented", "sem", "sf", "slam", "spData", "SuppDists", "TMB", "unmarked", "vegan", "waldo", "wk", "yulab.utils"))
musica=fread("https://datos.estadisticas.pr/dataset/dcb39773-3056-4d3d-91f8-a6ad6884ef52/resource/a632a85a-0d6d-4828-8a24-cbbdee4cec8f/download/facultad_-_conservatorio_de_musica-1.csv")
library(data.table)
library(data.table)
musica=fread("https://datos.estadisticas.pr/dataset/dcb39773-3056-4d3d-91f8-a6ad6884ef52/resource/a632a85a-0d6d-4828-8a24-cbbdee4cec8f/download/facultad_-_conservatorio_de_musica-1.csv")
musica=fread("https://datos.estadisticas.pr/dataset/dcb39773-3056-4d3d-91f8-a6ad6884ef52/resource/a632a85a-0d6d-4828-8a24-cbbdee4cec8f/download/facultad_-_conservatorio_de_musica-1.csv")
musica
names(vuelos)
library(datos)
names(vuelos)
vuelos %>%
dplyr::select(horario_salida)
library(tidyverse)
library(tidyverse)
vuelos %>%
dplyr::select(horario_salida)
names(vuelos)
vuelos %>%
dplyr::select(starts_with("horario"))
names(vuelos)
vuelos %>%
dplyr::select(contains("hora"))
vuelos %>%
dplyr::select(starts_with("horario"))
vuelos %>%
dplyr::select(contains("x"))
vuelos %>%
dplyr::select(contains("salida"))
vuelos
vuelos |> dplyr::select(anio:horario_salida)
names(vuelos)
# |> es igual %>%
new_df=vuelos |> dplyr::select(distancia, tiempo_vuelo, atraso_salida,  atraso_llegada) |>
mutate( ganancia = atraso_salida - atraso_llegada,
velocidad = distancia / tiempo_vuelo * 60)
new_df
set.seed(12345) # que los datos sean al azar, siempre sean los mismo, se usa el "set.seed()" para enseñanza.
#rnorm()  DATOS CON DISTRIBUCION NORMAL
data=rpois(14, 10)
df=as_tibble(data)
Sys.Date()
library(tidyverse)
library(datos)
head(vuelos)
vuelos
unique(vuelos$destino)
vuelos %>%
filter(destino=="SJU")
vuelos %>%
filter(destino=="SJU") %>%
filter(mes==12, dia==25) %>%
filter(aerolinea %in% c("AA", "UA"))  #pipe Command shift M
df_dia_cumpl=vuelos %>%
filter(destino =="SJU") %>%
filter(mes== 8, dia== 1) |>
nrow()
df_dia_cumpl
names(vuelos)
vuelos %>%
dplyr::select(mes, dia, destino, atraso_salida, atraso_llegada) %>%
filter(mes==11) %>%
filter(destino =="SJU") %>%
arrange(desc(atraso_salida))
library(datos)
library(tidyverse)
por_dia <- vuelos %>% # pipe
group_by(dia) %>% # group by day
summarise(atraso_promedio = mean(atraso_salida, na.rm = TRUE))
por_dia
## The median of the data set by day of the month
por_dia_2 <- vuelos %>%
group_by( dia) %>%
summarise(atraso_promedio = mean(atraso_salida, na.rm = TRUE),
atraso_mediana = median(atraso_salida, na.rm=TRUE))
por_dia_2
# El valor más común en un conjunto de datos
# Crear una función: no existe en los paquetes de R
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
por_dia_3=vuelos |>
dplyr::select(dia, mes, atraso_salida) |>
group_by(dia) %>%
summarise(atraso_promedio = mean(atraso_salida, na.rm = TRUE),
atraso_max=max(atraso_salida, na.rm=TRUE),
atraso_mode = getmode(atraso_salida))
por_dia_3
## The mode of the value
library(DescTools)
por_dia_4 <- vuelos %>%
group_by(dia) %>%
summarise(atraso_promedio = mean(atraso_salida, na.rm = TRUE),
atraso_median = median(atraso_salida, na.rm=TRUE),
atraso_mode = getmode(atraso_salida))
por_dia_4
vuelos %>%
dplyr::select(anio, mes, dia, atraso_llegada, destino) %>%
filter(destino =="SJU") %>%
filter(mes == 12 & dia ==25) %>%
# filter(mes == 12) %>%
group_by(dia, mes) %>%
summarise(atraso = mean(atraso_llegada, na.rm = TRUE))
vuelos %>%
dplyr::select(anio, mes, dia, atraso_salida) %>%
group_by(mes) %>%
filter(mes %in% c(1:6)) %>% # mes entre 1 y 6
summarise(atraso = mean(atraso_salida, na.rm = TRUE))
vuelos %>%
dplyr::select(anio, mes, dia, atraso_salida) %>%
filter(mes == 1 | mes == 12) |>  # mes 1 o 12
summarise(atraso = mean(atraso_salida, na.rm = TRUE))
names(vuelos)
vuelos %>%
dplyr::select(anio, mes, dia, atraso_salida, aerolinea) %>%
filter(mes == 12 & dia == 25 & aerolinea=="AA")
library(datos)
library(tidyverse)
vuelos %>%
dplyr::select(anio, mes, dia, atraso_salida, aerolinea) %>%
filter(mes == 11 & !aerolinea %in% c("AA", "DL")) %>%
group_by(aerolinea) %>%
summarise(atraso = mean(atraso_salida, na.rm = TRUE))
library(tidyverse)
2^2
1^2
1^0
NA^0
#NA==1
NA|TRUE
NA|FALSE
FALSE & NA
TRUE & NA
FALSE * NA
TRUE * NA
NA * 0
NA * 1
12 * 3
NA - 3
library(data.table)
musica=fread("https://datos.estadisticas.pr/dataset/dcb39773-3056-4d3d-91f8-a6ad6884ef52/resource/a632a85a-0d6d-4828-8a24-cbbdee4cec8f/download/facultad_-_conservatorio_de_musica-1.csv")
musica
library(data.table)
birth=fread("https://datos.estadisticas.pr/dataset/87620d17-bf63-445c-bb71-aca1a41c9077/resource/92728670-42cb-49d4-8fd3-cffdb6e54372/download/natlterr2014.csv")
head(birth)
library(readr)
nchs_births_2001 <- read_csv("nchs_births_2001.csv")
head(nchs_births_2001)
nchs_births_2001 |> dplyr::select(BIRMON, CSEX) |>
group_by()
unique(nchs_births_2001$STATENAT)
unique(nchs_births_2001$NOCCUR)
unique(nchs_births_2001$RB)
#WEEKDAY
#DGESTAT
vuelos %>%
dplyr::select(horario_salida) %>%
arrange() |>
head(n=10)
vuelos %>%
arrange(desc(horario_salida)) |>
head(n=10)
library(datos)
names(vuelos)
library(tidyverse)
vuelos %>%
dplyr::select(horario_salida)
vuelos %>%
dplyr::select(starts_with("horario"))
vuelos %>%
dplyr::select(ends_with("salida"))
vuelos %>%
dplyr::select(contains("salida"))
```
set.seed(12345) # que los datos sean al azar, siempre sean los mismo, se usa el "set.seed()" para enseñanza.
#rnorm()  DATOS CON DISTRIBUCION NORMAL
data=rpois(14, 10)
df=as_tibble(data)
df
df %>%
dplyr::select(value) %>%
mutate(lag1=lag(value)) %>%
mutate(lag3=lag(value, 3)) %>%
mutate(lag7=lag(value,5))
## Calcular la diferencia usando lag
df%>%
dplyr::select(value) %>%
mutate(Changes=value-lag(value, 1)) # El cambio en los valores entre celdas
set.seed(12345) # que los datos sean al azar, siempre sean los mismo, se usa el "set.seed()" para enseñanza.
data=rpois(14, 10)
df=as_tibble(data)
df
df %>%
dplyr::select(value) %>%
mutate(lag1=lag(value)) %>%
mutate(lag3=lag(value, 3)) %>%
mutate(lag7=lag(value,5))
df%>%
dplyr::select(value) %>%
mutate(Changes=value-lag(value, 1)) # El cambio en los valores entre celdas
df%>%
dplyr::select(value, lag1) %>%
mutate(Changes=value-lag(value, 1)) # El cambio en los valores entre celdas
df%>%
dplyr::select(value) %>%
mutate(lag1=lag(value)) %>%
mutate(Changes=value-lag(value, 1)) # El cambio en los valores entre celdas
library(readr)
library(dplyr)
#names(url_COVID_PR)
url_COVID_PR <- read_csv("Datos/url_COVID_PR.csv")
#head(url_COVID_PR)
#names(url_COVID_PR)
df2=url_COVID_PR %>%
dplyr::select(IncCasosSaludNuevo) %>%
mutate(Cambios_Casos=IncCasosSaludNuevo-lag(IncCasosSaludNuevo,7))
df2
df2 %>%
dplyr::select(IncCasosSaludNuevo, Cambios_Casos) %>%
colMeans(na.rm=TRUE)
#df2 %>%
#  select()
#  slice(na.rm=TRUE) # lets you index rows by their (integer) locations. It allows you to select, remove, and duplicate rows. It is accompanied by a number of helpers for common use cases
set.seed(12345)
data=rpois(15, 10)
df=as.tibble(data)
df
df %>%
dplyr::select(value) %>%
mutate(lead1=lead(value)) %>%
mutate(lead3=lead(value, 3))
x <- sample(1:15, 10, replace=TRUE)
x
df=as.tibble(x)
df
df %>%
dplyr::select(value) %>%
mutate(suma=cumsum(value))
x
x <- sample(1:15, 10, replace=TRUE) # sample es para seleccionar valores al azar de un vector
x
x <- sample(1:15, 10, replace=TRUE) # sample es para seleccionar valores al azar de un vector
x
set.seed(12345)
x <- sample(1:15, 10, replace=TRUE) # sample es para seleccionar valores al azar de un vector
x
df=as.tibble(x)
df
set.seed(12345)
x <- sample(1:15, 10, replace=TRUE) # sample es para seleccionar valores al azar de un vector
x
x <- sample(1:15, 10, replace=TRUE) # sample es para seleccionar valores al azar de un vector
x
x <- sample(1:15, 10, replace=TRUE) # sample es para seleccionar valores al azar de un vector
x
set.seed(12345)
x <- sample(1:15, 10, replace=TRUE) # sample es para seleccionar valores al azar de un vector
x
set.seed(12345)
x <- sample(1:15, 10, replace=TRUE) # sample es para seleccionar valores al azar de un vector
x
set.seed(12345)
x <- sample(1:15, 10, replace=TRUE) # sample es para seleccionar valores al azar de un vector
x
set.seed(12345)
x <- sample(1:15, 10, replace=TRUE) # sample es para seleccionar valores al azar de un vector
x
set.seed(12345)
x <- sample(1:15, 10, replace=TRUE) # sample es para seleccionar valores al azar de un vector
x
df %>%
dplyr::select(value) %>%
mutate(suma=cumsum(value))
names(vuelos)
Sys.Date()
library(tidyverse)
library(datos)
head(vuelos)
vuelos
unique(vuelos$destino)
vuelos %>%
filter(destino=="SJU")
vuelos %>%
filter(destino=="SJU") %>%
filter(mes==12, dia==25) %>%
filter(aerolinea %in% c("AA", "UA"))  #pipe Command shift M
df_dia_cumpl=vuelos %>%
filter(destino =="SJU") %>%
filter(mes== 8, dia== 1) |>
nrow()
df_dia_cumpl
names(vuelos)
vuelos %>%
dplyr::select(mes, dia, destino, atraso_salida, atraso_llegada) %>%
filter(mes==11) %>%
filter(destino =="SJU") %>%
arrange(desc(atraso_salida))
library(datos)
library(tidyverse)
por_dia <- vuelos %>% # pipe
group_by(dia) %>% # group by day
summarise(atraso_promedio = mean(atraso_salida, na.rm = TRUE))
por_dia
## The median of the data set by day of the month
por_dia_2 <- vuelos %>%
group_by( dia) %>%
summarise(atraso_promedio = mean(atraso_salida, na.rm = TRUE),
atraso_mediana = median(atraso_salida, na.rm=TRUE))
por_dia_2
# El valor más común en un conjunto de datos
# Crear una función: no existe en los paquetes de R
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
por_dia_3=vuelos |>
dplyr::select(dia, mes, atraso_salida) |>
group_by(dia) %>%
summarise(atraso_promedio = mean(atraso_salida, na.rm = TRUE),
atraso_max=max(atraso_salida, na.rm=TRUE),
atraso_mode = getmode(atraso_salida))
por_dia_3
## The mode of the value
library(DescTools)
por_dia_4 <- vuelos %>%
group_by(dia) %>%
summarise(atraso_promedio = mean(atraso_salida, na.rm = TRUE),
atraso_median = median(atraso_salida, na.rm=TRUE),
atraso_mode = getmode(atraso_salida))
por_dia_4
vuelos %>%
dplyr::select(anio, mes, dia, atraso_llegada, destino) %>%
filter(destino =="SJU") %>%
filter(mes == 12 & dia ==25) %>%
# filter(mes == 12) %>%
group_by(dia, mes) %>%
summarise(atraso = mean(atraso_llegada, na.rm = TRUE))
vuelos %>%
dplyr::select(anio, mes, dia, atraso_salida) %>%
group_by(mes) %>%
filter(mes %in% c(1:6)) %>% # mes entre 1 y 6
summarise(atraso = mean(atraso_salida, na.rm = TRUE))
vuelos %>%
dplyr::select(anio, mes, dia, atraso_salida) %>%
filter(mes == 1 | mes == 12) |>  # mes 1 o 12
summarise(atraso = mean(atraso_salida, na.rm = TRUE))
names(vuelos)
vuelos %>%
dplyr::select(anio, mes, dia, atraso_salida, aerolinea) %>%
filter(mes == 12 & dia == 25 & aerolinea=="AA")
library(datos)
library(tidyverse)
vuelos %>%
dplyr::select(anio, mes, dia, atraso_salida, aerolinea) %>%
filter(mes == 11 & !aerolinea %in% c("AA", "DL")) %>%
group_by(aerolinea) %>%
summarise(atraso = mean(atraso_salida, na.rm = TRUE))
library(tidyverse)
2^2
1^2
1^0
NA^0
#NA==1
NA|TRUE
NA|FALSE
FALSE & NA
TRUE & NA
FALSE * NA
TRUE * NA
NA * 0
NA * 1
12 * 3
NA - 3
library(data.table)
musica=fread("https://datos.estadisticas.pr/dataset/dcb39773-3056-4d3d-91f8-a6ad6884ef52/resource/a632a85a-0d6d-4828-8a24-cbbdee4cec8f/download/facultad_-_conservatorio_de_musica-1.csv")
musica
library(data.table)
birth=fread("https://datos.estadisticas.pr/dataset/87620d17-bf63-445c-bb71-aca1a41c9077/resource/92728670-42cb-49d4-8fd3-cffdb6e54372/download/natlterr2014.csv")
head(birth)
library(readr)
nchs_births_2001 <- read_csv("nchs_births_2001.csv")
head(nchs_births_2001)
nchs_births_2001 |> dplyr::select(BIRMON, CSEX) |>
group_by()
unique(nchs_births_2001$STATENAT)
unique(nchs_births_2001$NOCCUR)
unique(nchs_births_2001$RB)
#WEEKDAY
#DGESTAT
vuelos %>%
dplyr::select(horario_salida) %>%
arrange() |>
head(n=10)
vuelos %>%
arrange(desc(horario_salida)) |>
head(n=10)
library(datos)
names(vuelos)
library(tidyverse)
vuelos %>%
dplyr::select(horario_salida)
vuelos %>%
dplyr::select(starts_with("horario"))
vuelos %>%
dplyr::select(ends_with("salida"))
vuelos %>%
dplyr::select(contains("salida"))
vuelos %>%
rename(aeropuerto_origen=origen) %>%
rename(areopuerto_distino=destino) # nombre nuevo= nombre original
head(vuelos)
vuelos %>%
dplyr::select(distancia, aerolinea, everything())
vuelos |> dplyr::select(anio:horario_salida)
names(vuelos)
# |> es igual %>%
new_df=vuelos |> dplyr::select(distancia, tiempo_vuelo, atraso_salida,  atraso_llegada) |>
mutate( ganancia = atraso_salida - atraso_llegada,
velocidad = distancia / tiempo_vuelo * 60)
new_df
flights |> transmute(
gain = dep_delay - arr_delay,
hours = air_time / 60,
gain_per_hour = gain / hours
)
vuelos_sml |> transmute(
ganado = atraso_salida - atraso_llegada,
velocidad = distancia / tiempo_vuelo * 60
)
vuelos |> transmute(
ganado = atraso_salida - atraso_llegada,
velocidad = distancia / tiempo_vuelo * 60
)
data=rpois(14, 10)
data
set.seed(12345) # que los datos sean al azar, siempre sean los mismo, se usa el "set.seed()" para enseñanza.
#rnorm()  DATOS CON DISTRIBUCION NORMAL
data=rpois(14, 10)
data
df=as_tibble(data)
df
df %>%
dplyr::select(value) %>%
mutate(lag1=lag(value)) %>%
mutate(lag3=lag(value, 3)) %>%
mutate(lag5=lag(value,5))
set.seed(12345) # set.seed() es para que los datos NO sean al azar y se puede replicar los resultados, tipicamente esto se usa para enseñanzar.
x <- sample(1:15, 10, replace=TRUE)
x
set.seed(12345) # set.seed() es para que los datos NO sean al azar y se puede replicar los resultados, tipicamente esto se usa para enseñanzar.
x <- sample(1:15, 10, replace=TRUE)
df %>%
dplyr::select(value) %>%
mutate(suma=cumsum(value))
df3=df %>%
dplyr::select(value) %>%
mutate(Prom_cum=cummean(value)) %>%
mutate(Var_cum=cumstats::cumvar(value)) # activa el paquete cumstats
df3
df3
df3$order=c(1:1000)
df3$order=c(1:1000)
set.seed(678)
x <- rnorm(1000, 5, .001)
head(x)
df=as.tibble(x)
head(df)
mean(df$value)
library(cumstats)
df3=df %>%
dplyr::select(value) %>%
mutate(Prom_cum=cummean(value)) %>%
mutate(Var_cum=cumstats::cumvar(value)) # activa el paquete cumstats
df3
library(cumstats)
df3=df %>%
dplyr::select(value) %>%
mutate(Prom_cum=cummean(value)) %>%
mutate(Var_cum=cumvar(value))
df3
df3$order=c(1:1000)
df3
ggplot(df3, aes(order, Var_cum))+
geom_point()+
geom_smooth()
ggplot(df3, aes(order, Prom_cum))+
geom_point()+
geom_smooth()
Lahman::Batting
d
datos::bateadores
head(Lahman::Batting)
head(datos::bateadores)
Lahman::Batting %>%
count(playerID) %>%
filter(n>1)
