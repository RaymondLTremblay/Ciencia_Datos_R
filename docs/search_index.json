[["transformacion.html", "Chapter 5 Transformacion 5.1 Evaluar el archivo 5.2 Temas: Reconocer y aplicar las diferentes funciones 5.3 starts_with(), ends_with() 5.4 rename() 5.5 Reoganizar el oden de las columnas 5.6 matches(“(.)\\1”) Lo veremos en la leccion de “STRING” 5.7 Hagan lo con el data set en espanol 5.8 transmute() 5.9 lag() 5.10 Usa “Lag” con “IncCasosSaludNuevo” en COVID-19 PR 5.11 lead(), 5.12 cumsum 5.13 cummean() and cumvar() 5.14 min_rank() y # min_rank(desc()) 5.15 row_number() 5.16 dense_rank() 5.17 percent_rank() 5.18 cume_dist() 5.19 Resúmenes con summarise() by group using group_by() 5.20 The worst airline in departure delays 5.21 El Pipe 5.22 Otras funciones: NA 5.23 Otras funciones:", " Chapter 5 Transformacion Fecha de la ultima revisión ## [1] &quot;2023-08-24&quot; El tema proviene de los siguientes sitios. English: https://r4ds.had.co.nz/transform.html Español: https://es.r4ds.hadley.nz/05-transform.html Code library(tidyverse) ## ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── ## ✔ dplyr 1.1.2 ✔ readr 2.1.4 ## ✔ forcats 1.0.0 ✔ stringr 1.5.0 ## ✔ ggplot2 3.4.3 ✔ tibble 3.2.1 ## ✔ lubridate 1.9.2 ✔ tidyr 1.3.0 ## ✔ purrr 1.0.2 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## ✖ dplyr::filter() masks stats::filter() ## ✖ dplyr::lag() masks stats::lag() ## ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors Code library(datos) head(vuelos) ## # A tibble: 6 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 542 540 2 ## 4 2013 1 1 544 545 -1 ## 5 2013 1 1 554 600 -6 ## 6 2013 1 1 554 558 -4 ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; 5.1 Evaluar el archivo Mirar el archivo y entender la información antes de hacer cualquier analisis/ Cual son las variables Cuales son. los tipos de datos int valores enteros, dbl números reales, significa dobles chr caracteres o vectores dttm fecha y tiempo, minutos date fecha S3: POSIXct Fecha y tiempo, minutos lgl valores logicos “cierto” (TRUE) y “falso” (FALSE) fctr factores categoricos. Evalua en este archivo los tipos de variables que se encuentra. Code vuelos ## # A tibble: 336,776 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 542 540 2 ## 4 2013 1 1 544 545 -1 ## 5 2013 1 1 554 600 -6 ## 6 2013 1 1 554 558 -4 ## 7 2013 1 1 555 600 -5 ## 8 2013 1 1 557 600 -3 ## 9 2013 1 1 557 600 -3 ## 10 2013 1 1 558 600 -2 ## # ℹ 336,766 more rows ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; 5.1.1 Cual son todos los destinos de vuelos? cual función usará Code unique(vuelos$destino) ## [1] &quot;IAH&quot; &quot;MIA&quot; &quot;BQN&quot; &quot;ATL&quot; &quot;ORD&quot; &quot;FLL&quot; &quot;IAD&quot; &quot;MCO&quot; &quot;PBI&quot; &quot;TPA&quot; &quot;LAX&quot; &quot;SFO&quot; ## [13] &quot;DFW&quot; &quot;BOS&quot; &quot;LAS&quot; &quot;MSP&quot; &quot;DTW&quot; &quot;RSW&quot; &quot;SJU&quot; &quot;PHX&quot; &quot;BWI&quot; &quot;CLT&quot; &quot;BUF&quot; &quot;DEN&quot; ## [25] &quot;SNA&quot; &quot;MSY&quot; &quot;SLC&quot; &quot;XNA&quot; &quot;MKE&quot; &quot;SEA&quot; &quot;ROC&quot; &quot;SYR&quot; &quot;SRQ&quot; &quot;RDU&quot; &quot;CMH&quot; &quot;JAX&quot; ## [37] &quot;CHS&quot; &quot;MEM&quot; &quot;PIT&quot; &quot;SAN&quot; &quot;DCA&quot; &quot;CLE&quot; &quot;STL&quot; &quot;MYR&quot; &quot;JAC&quot; &quot;MDW&quot; &quot;HNL&quot; &quot;BNA&quot; ## [49] &quot;AUS&quot; &quot;BTV&quot; &quot;PHL&quot; &quot;STT&quot; &quot;EGE&quot; &quot;AVL&quot; &quot;PWM&quot; &quot;IND&quot; &quot;SAV&quot; &quot;CAK&quot; &quot;HOU&quot; &quot;LGB&quot; ## [61] &quot;DAY&quot; &quot;ALB&quot; &quot;BDL&quot; &quot;MHT&quot; &quot;MSN&quot; &quot;GSO&quot; &quot;CVG&quot; &quot;BUR&quot; &quot;RIC&quot; &quot;GSP&quot; &quot;GRR&quot; &quot;MCI&quot; ## [73] &quot;ORF&quot; &quot;SAT&quot; &quot;SDF&quot; &quot;PDX&quot; &quot;SJC&quot; &quot;OMA&quot; &quot;CRW&quot; &quot;OAK&quot; &quot;SMF&quot; &quot;TUL&quot; &quot;TYS&quot; &quot;OKC&quot; ## [85] &quot;PVD&quot; &quot;DSM&quot; &quot;PSE&quot; &quot;BHM&quot; &quot;CAE&quot; &quot;HDN&quot; &quot;BZN&quot; &quot;MTJ&quot; &quot;EYW&quot; &quot;PSP&quot; &quot;ACK&quot; &quot;BGR&quot; ## [97] &quot;ABQ&quot; &quot;ILM&quot; &quot;MVY&quot; &quot;SBN&quot; &quot;LEX&quot; &quot;CHO&quot; &quot;TVC&quot; &quot;ANC&quot; &quot;LGA&quot; 5.1.2 Seleciona los vuelos donde el destino es San Juan Code vuelos %&gt;% filter(destino==&quot;SJU&quot;) ## # A tibble: 5,819 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 615 615 0 ## 2 2013 1 1 628 630 -2 ## 3 2013 1 1 701 700 1 ## 4 2013 1 1 711 715 -4 ## 5 2013 1 1 820 820 0 ## 6 2013 1 1 820 820 0 ## 7 2013 1 1 840 845 -5 ## 8 2013 1 1 926 929 -3 ## 9 2013 1 1 1202 1159 3 ## 10 2013 1 1 1245 1249 -4 ## # ℹ 5,809 more rows ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; 5.1.3 Selecciona los vuelos donde el destino es San Juan el dia de navidad Code vuelos %&gt;% filter(destino==&quot;SJU&quot;) %&gt;% filter(mes==12, dia==25) # pipe Command shift M ## # A tibble: 21 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 12 25 604 611 -7 ## 2 2013 12 25 654 656 -2 ## 3 2013 12 25 712 705 7 ## 4 2013 12 25 730 730 0 ## 5 2013 12 25 736 739 -3 ## 6 2013 12 25 759 805 -6 ## 7 2013 12 25 947 947 0 ## 8 2013 12 25 1202 1206 -4 ## 9 2013 12 25 1254 900 234 ## 10 2013 12 25 1354 1330 24 ## # ℹ 11 more rows ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; 5.1.4 Selecciona los vuelos que salen de San Juan en el dia de ti cumpleaños y contabiliza cuanto hubo Code df_dia_cumpl=vuelos %&gt;% filter(destino ==&quot;SJU&quot;) %&gt;% filter(mes== 8, dia== 1) |&gt; nrow() df_dia_cumpl ## [1] 19 5.1.4.1 Organizar los datos en orden de más grande a más pequeño Selecciona los mes, dia, destino, atraso_salida, atraso_llegada Selecciona solamente el mes de noviembre Selecciona solamente los vuelos a destino de a San Juan oraganiza los datos en orden de más atraso_salido de mayor a menor Code names(vuelos) ## [1] &quot;anio&quot; &quot;mes&quot; &quot;dia&quot; ## [4] &quot;horario_salida&quot; &quot;salida_programada&quot; &quot;atraso_salida&quot; ## [7] &quot;horario_llegada&quot; &quot;llegada_programada&quot; &quot;atraso_llegada&quot; ## [10] &quot;aerolinea&quot; &quot;vuelo&quot; &quot;codigo_cola&quot; ## [13] &quot;origen&quot; &quot;destino&quot; &quot;tiempo_vuelo&quot; ## [16] &quot;distancia&quot; &quot;hora&quot; &quot;minuto&quot; ## [19] &quot;fecha_hora&quot; Code vuelos %&gt;% select(mes, dia, destino, atraso_salida, atraso_llegada) %&gt;% filter(mes==11) %&gt;% filter(destino ==&quot;SJU&quot;) %&gt;% arrange(desc(atraso_salida)) ## # A tibble: 429 × 5 ## mes dia destino atraso_salida atraso_llegada ## &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 11 7 SJU 231 190 ## 2 11 28 SJU 223 235 ## 3 11 23 SJU 187 154 ## 4 11 24 SJU 181 188 ## 5 11 23 SJU 157 165 ## 6 11 12 SJU 145 127 ## 7 11 10 SJU 94 88 ## 8 11 24 SJU 90 112 ## 9 11 30 SJU 68 59 ## 10 11 21 SJU 66 42 ## # ℹ 419 more rows 5.2 Temas: Reconocer y aplicar las diferentes funciones Tipos de variables: int dbl chr dttm lgl fctr date Funciones de dplyr: filter() arrange() select() summarize() group_by() Code library(datos) library(tidyverse) por_dia &lt;- group_by(vuelos, dia)%&gt;% summarise(atraso_promedio = mean(atraso_salida, na.rm = TRUE)) por_dia ## # A tibble: 31 × 2 ## dia atraso_promedio ## &lt;int&gt; &lt;dbl&gt; ## 1 1 14.2 ## 2 2 14.1 ## 3 3 10.8 ## 4 4 5.79 ## 5 5 7.82 ## 6 6 6.99 ## 7 7 14.3 ## 8 8 21.8 ## 9 9 14.6 ## 10 10 18.3 ## # ℹ 21 more rows Code vuelos %&gt;% select(anio, mes, dia, atraso_salida) %&gt;% group_by(mes) %&gt;% summarise(atraso = mean(atraso_salida, na.rm = TRUE)) ## # A tibble: 12 × 2 ## mes atraso ## &lt;int&gt; &lt;dbl&gt; ## 1 1 10.0 ## 2 2 10.8 ## 3 3 13.2 ## 4 4 13.9 ## 5 5 13.0 ## 6 6 20.8 ## 7 7 21.7 ## 8 8 12.6 ## 9 9 6.72 ## 10 10 6.24 ## 11 11 5.44 ## 12 12 16.6 Operaciones lógicas boolean: &amp; “ampersand” “|” or= “o” !, no incluye, excluir…. %in%, filtrar para multiples valores ==, es igual a… “exactamente” “&lt;” “&gt;” Bollean, que incluye multimple opciones %in% Code vuelos %&gt;% select(anio, mes, dia, atraso_salida) %&gt;% group_by(mes) %&gt;% filter(mes %in% c(1:6)) %&gt;% summarise(atraso = mean(atraso_salida, na.rm = TRUE)) ## # A tibble: 6 × 2 ## mes atraso ## &lt;int&gt; &lt;dbl&gt; ## 1 1 10.0 ## 2 2 10.8 ## 3 3 13.2 ## 4 4 13.9 ## 5 5 13.0 ## 6 6 20.8 Otra alternativa Code vuelos %&gt;% select(anio, mes, dia, atraso_salida) %&gt;% filter(mes == 11 | mes == 12) ## # A tibble: 55,403 × 4 ## anio mes dia atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 11 1 6 ## 2 2013 11 1 105 ## 3 2013 11 1 -5 ## 4 2013 11 1 -6 ## 5 2013 11 1 -3 ## 6 2013 11 1 -11 ## 7 2013 11 1 -10 ## 8 2013 11 1 -6 ## 9 2013 11 1 -6 ## 10 2013 11 1 -6 ## # ℹ 55,393 more rows Code #%&gt;% # summarise(atraso = mean(atraso_salida, na.rm = TRUE)) &amp; el “y” Code names(vuelos) ## [1] &quot;anio&quot; &quot;mes&quot; &quot;dia&quot; ## [4] &quot;horario_salida&quot; &quot;salida_programada&quot; &quot;atraso_salida&quot; ## [7] &quot;horario_llegada&quot; &quot;llegada_programada&quot; &quot;atraso_llegada&quot; ## [10] &quot;aerolinea&quot; &quot;vuelo&quot; &quot;codigo_cola&quot; ## [13] &quot;origen&quot; &quot;destino&quot; &quot;tiempo_vuelo&quot; ## [16] &quot;distancia&quot; &quot;hora&quot; &quot;minuto&quot; ## [19] &quot;fecha_hora&quot; Code vuelos %&gt;% select(anio, mes, dia, atraso_salida, aerolinea) %&gt;% filter(mes == 12 &amp; dia == 25 &amp; aerolinea==&quot;AA&quot;) ## # A tibble: 78 × 5 ## anio mes dia atraso_salida aerolinea ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 2013 12 25 2 AA ## 2 2013 12 25 -4 AA ## 3 2013 12 25 1 AA ## 4 2013 12 25 0 AA ## 5 2013 12 25 -3 AA ## 6 2013 12 25 -2 AA ## 7 2013 12 25 26 AA ## 8 2013 12 25 -7 AA ## 9 2013 12 25 -6 AA ## 10 2013 12 25 21 AA ## # ℹ 68 more rows !, el “no”, excluye Code vuelos %&gt;% select(anio, mes, dia, atraso_salida) %&gt;% filter(mes == 11 &amp; !dia %in% c(1:10)) %&gt;% group_by(dia) %&gt;% summarise(atraso = mean(atraso_salida, na.rm = TRUE)) ## # A tibble: 20 × 2 ## dia atraso ## &lt;int&gt; &lt;dbl&gt; ## 1 11 3.34 ## 2 12 8.55 ## 3 13 2.60 ## 4 14 2.16 ## 5 15 0.587 ## 6 16 1.70 ## 7 17 21.9 ## 8 18 5.59 ## 9 19 0.439 ## 10 20 1.78 ## 11 21 3.11 ## 12 22 11.0 ## 13 23 3.49 ## 14 24 14.7 ## 15 25 3.32 ## 16 26 7.97 ## 17 27 16.7 ## 18 28 6.06 ## 19 29 0.145 ## 20 30 2.79 Ejercicios: Hacer los ejercicios en la sección 5.2.4 del libro en español 5.2.4 Ejercicios - Encuentra todos los vuelos que: Tuvieron un retraso de llegada de dos o más horas Code #names(vuelos) vuelos %&gt;% filter(atraso_llegada &gt;=120) ## # A tibble: 10,200 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 811 630 101 ## 2 2013 1 1 848 1835 853 ## 3 2013 1 1 957 733 144 ## 4 2013 1 1 1114 900 134 ## 5 2013 1 1 1505 1310 115 ## 6 2013 1 1 1525 1340 105 ## 7 2013 1 1 1549 1445 64 ## 8 2013 1 1 1558 1359 119 ## 9 2013 1 1 1732 1630 62 ## 10 2013 1 1 1803 1620 103 ## # ℹ 10,190 more rows ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; Volaron a Houston (IAH o HOU) Cual son estos aeropuertos, Hou == Houston, IAH == George Bush, Texas Code vuelos %&gt;% filter(destino %in% c(&quot;IAH&quot;, &quot;HOU&quot;)) ## # A tibble: 9,313 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 623 627 -4 ## 4 2013 1 1 728 732 -4 ## 5 2013 1 1 739 739 0 ## 6 2013 1 1 908 908 0 ## 7 2013 1 1 1028 1026 2 ## 8 2013 1 1 1044 1045 -1 ## 9 2013 1 1 1114 900 134 ## 10 2013 1 1 1205 1200 5 ## # ℹ 9,303 more rows ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; Code vuelos %&gt;% select(anio, mes, dia, destino, aerolinea, atraso_llegada) %&gt;% filter(destino %in% c(&quot;IAH&quot;, &quot;HOU&quot;)) ## # A tibble: 9,313 × 6 ## anio mes dia destino aerolinea atraso_llegada ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 2013 1 1 IAH UA 11 ## 2 2013 1 1 IAH UA 20 ## 3 2013 1 1 IAH UA 1 ## 4 2013 1 1 IAH UA 3 ## 5 2013 1 1 IAH UA 26 ## 6 2013 1 1 IAH UA 9 ## 7 2013 1 1 IAH UA 11 ## 8 2013 1 1 IAH UA 1 ## 9 2013 1 1 IAH UA 145 ## 10 2013 1 1 IAH UA -2 ## # ℹ 9,303 more rows Fueron operados por United, American o Delta Code unique(vuelos$aerolinea) ## [1] &quot;UA&quot; &quot;AA&quot; &quot;B6&quot; &quot;DL&quot; &quot;EV&quot; &quot;MQ&quot; &quot;US&quot; &quot;WN&quot; &quot;VX&quot; &quot;FL&quot; &quot;AS&quot; &quot;9E&quot; &quot;F9&quot; &quot;HA&quot; &quot;YV&quot; ## [16] &quot;OO&quot; Code vuelos %&gt;% filter(aerolinea %in% c(&quot;UA&quot;, &quot;AA&quot;,&quot;DL&quot;)) ## # A tibble: 139,504 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 542 540 2 ## 4 2013 1 1 554 600 -6 ## 5 2013 1 1 554 558 -4 ## 6 2013 1 1 558 600 -2 ## 7 2013 1 1 558 600 -2 ## 8 2013 1 1 558 600 -2 ## 9 2013 1 1 559 600 -1 ## 10 2013 1 1 559 600 -1 ## # ℹ 139,494 more rows ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; Partieron en invierno del hemisferio sur (julio, agosto y septiembre) Code vuelos %&gt;% filter(mes %in% c(6:8)) ## # A tibble: 86,995 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 6 1 2 2359 3 ## 2 2013 6 1 451 500 -9 ## 3 2013 6 1 506 515 -9 ## 4 2013 6 1 534 545 -11 ## 5 2013 6 1 538 545 -7 ## 6 2013 6 1 539 540 -1 ## 7 2013 6 1 546 600 -14 ## 8 2013 6 1 551 600 -9 ## 9 2013 6 1 552 600 -8 ## 10 2013 6 1 553 600 -7 ## # ℹ 86,985 more rows ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; Code vuelos %&gt;% filter(mes %in% c(7, 8, 9)) ## # A tibble: 86,326 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 7 1 1 2029 212 ## 2 2013 7 1 2 2359 3 ## 3 2013 7 1 29 2245 104 ## 4 2013 7 1 43 2130 193 ## 5 2013 7 1 44 2150 174 ## 6 2013 7 1 46 2051 235 ## 7 2013 7 1 48 2001 287 ## 8 2013 7 1 58 2155 183 ## 9 2013 7 1 100 2146 194 ## 10 2013 7 1 100 2245 135 ## # ℹ 86,316 more rows ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; Llegaron más de dos horas tarde, pero no salieron tarde Code names(vuelos) ## [1] &quot;anio&quot; &quot;mes&quot; &quot;dia&quot; ## [4] &quot;horario_salida&quot; &quot;salida_programada&quot; &quot;atraso_salida&quot; ## [7] &quot;horario_llegada&quot; &quot;llegada_programada&quot; &quot;atraso_llegada&quot; ## [10] &quot;aerolinea&quot; &quot;vuelo&quot; &quot;codigo_cola&quot; ## [13] &quot;origen&quot; &quot;destino&quot; &quot;tiempo_vuelo&quot; ## [16] &quot;distancia&quot; &quot;hora&quot; &quot;minuto&quot; ## [19] &quot;fecha_hora&quot; Code vuelos %&gt;% filter(atraso_llegada&gt;120 |atraso_salida &lt;0) ## # A tibble: 193,583 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 544 545 -1 ## 2 2013 1 1 554 600 -6 ## 3 2013 1 1 554 558 -4 ## 4 2013 1 1 555 600 -5 ## 5 2013 1 1 557 600 -3 ## 6 2013 1 1 557 600 -3 ## 7 2013 1 1 558 600 -2 ## 8 2013 1 1 558 600 -2 ## 9 2013 1 1 558 600 -2 ## 10 2013 1 1 558 600 -2 ## # ℹ 193,573 more rows ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; Code vuelos %&gt;% select(atraso_llegada, atraso_salida) %&gt;% filter(atraso_llegada &gt;= 120 &amp; atraso_salida &lt;= 0) ## # A tibble: 29 × 2 ## atraso_llegada atraso_salida ## &lt;dbl&gt; &lt;dbl&gt; ## 1 124 -1 ## 2 130 0 ## 3 124 -2 ## 4 122 -3 ## 5 194 -2 ## 6 140 -3 ## 7 124 -5 ## 8 179 -2 ## 9 143 -5 ## 10 127 -3 ## # ℹ 19 more rows Se retrasaron por lo menos una hora, pero repusieron más de 30 minutos en vuelo Code vuelos ## # A tibble: 336,776 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 542 540 2 ## 4 2013 1 1 544 545 -1 ## 5 2013 1 1 554 600 -6 ## 6 2013 1 1 554 558 -4 ## 7 2013 1 1 555 600 -5 ## 8 2013 1 1 557 600 -3 ## 9 2013 1 1 557 600 -3 ## 10 2013 1 1 558 600 -2 ## # ℹ 336,766 more rows ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; Code ?vuelos #select(atraso_salida, atraso_llegada ) %&gt;% #filter(atraso_salida &gt;= 60 &amp; atraso_llegada &lt;= 30) Partieron entre la medianoche y las 6a.m. (incluyente) # 360 minutos Code names(vuelos) ## [1] &quot;anio&quot; &quot;mes&quot; &quot;dia&quot; ## [4] &quot;horario_salida&quot; &quot;salida_programada&quot; &quot;atraso_salida&quot; ## [7] &quot;horario_llegada&quot; &quot;llegada_programada&quot; &quot;atraso_llegada&quot; ## [10] &quot;aerolinea&quot; &quot;vuelo&quot; &quot;codigo_cola&quot; ## [13] &quot;origen&quot; &quot;destino&quot; &quot;tiempo_vuelo&quot; ## [16] &quot;distancia&quot; &quot;hora&quot; &quot;minuto&quot; ## [19] &quot;fecha_hora&quot; Code vuelos %&gt;% select(horario_salida) %&gt;% filter(horario_salida &lt;=600) ## # A tibble: 9,344 × 1 ## horario_salida ## &lt;int&gt; ## 1 517 ## 2 533 ## 3 542 ## 4 544 ## 5 554 ## 6 554 ## 7 555 ## 8 557 ## 9 557 ## 10 558 ## # ℹ 9,334 more rows Otra función de dplyr que es útil para usar filtros es between(). ¿Qué hace? ¿Puedes usarla para simplificar el código necesario para responder a los desafíos anteriores? Code vuelos %&gt;% select(horario_salida) %&gt;% filter(between(horario_salida,00, 360)) ## # A tibble: 1,179 × 1 ## horario_salida ## &lt;int&gt; ## 1 42 ## 2 126 ## 3 32 ## 4 50 ## 5 235 ## 6 25 ## 7 106 ## 8 14 ## 9 37 ## 10 16 ## # ℹ 1,169 more rows Code vuelos %&gt;% select(horario_salida) %&gt;% filter(between(horario_salida, 00, 360)) ## # A tibble: 1,179 × 1 ## horario_salida ## &lt;int&gt; ## 1 42 ## 2 126 ## 3 32 ## 4 50 ## 5 235 ## 6 25 ## 7 106 ## 8 14 ## 9 37 ## 10 16 ## # ℹ 1,169 more rows ¿Cuántos vuelos tienen datos faltantes en horario_salida? ¿Qué otras variables tienen valores faltantes? ¿Qué representan estas filas? Code vuelos %&gt;% select(horario_salida) %&gt;% is.na() %&gt;% table() ## . ## FALSE TRUE ## 328521 8255 Code #vuelos %&gt;% #select(horario_salida) %&gt;% # table() Code library(tidyverse) 2^2 ## [1] 4 Code 1^2 ## [1] 1 Code 1^0 ## [1] 1 Code NA^0 ## [1] 1 Code #NA==1 NA|TRUE ## [1] TRUE Code FALSE &amp; NA ## [1] FALSE Code NA * 0 ## [1] NA Code NA * 1 ## [1] NA Code 12 * 3 ## [1] 36 Code NA - 3 ## [1] NA Use data from a link on the web *** filter for Puerto Rico only COVID_PR Code library(data.table) ## ## Attaching package: &#39;data.table&#39; ## The following objects are masked from &#39;package:lubridate&#39;: ## ## hour, isoweek, mday, minute, month, quarter, second, wday, week, ## yday, year ## The following objects are masked from &#39;package:dplyr&#39;: ## ## between, first, last ## The following object is masked from &#39;package:purrr&#39;: ## ## transpose Code #url_COVID_PR=fread(&quot;https://raw.githubusercontent.com/rafalab/pr-covid/master/dashboard/data/DatosMortalidad.csv&quot;) #write_csv(url_COVID_PR, &quot;url_COVID_PR.csv&quot;) library(readr) url_COVID_PR &lt;- read_csv(&quot;Datos/url_COVID_PR.csv&quot;) ## New names: ## • `` -&gt; `...1` ## Rows: 587 Columns: 18 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: &quot;,&quot; ## chr (1): Fecha ## dbl (17): ...1, Muertes, IncrementoMuertes, CasosPCR_Salud, IncCasosPCR_Salu... ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. Code url_COVID=url_COVID_PR names(url_COVID) ## [1] &quot;...1&quot; &quot;Fecha&quot; &quot;Muertes&quot; ## [4] &quot;IncrementoMuertes&quot; &quot;CasosPCR_Salud&quot; &quot;IncCasosPCR_Salud&quot; ## [7] &quot;CasosSaludNuevo&quot; &quot;IncCasosSaludNuevo&quot; &quot;HospitCOV19&quot; ## [10] &quot;CamasICU&quot; &quot;CamasICU_disp&quot; &quot;Ventiladores&quot; ## [13] &quot;MuertesSalud&quot; &quot;IncMueSalud&quot; &quot;VacDoses&quot; ## [16] &quot;VacAdm&quot; &quot;N1MoreDoses&quot; &quot;N2Doses&quot; Code head(url_COVID) ## # A tibble: 6 × 18 ## ...1 Fecha Muertes IncrementoMuertes CasosPCR_Salud IncCasosPCR_Salud ## &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 3/12/20 0 0 NA NA ## 2 2 3/13/20 0 0 NA NA ## 3 3 3/14/20 0 0 NA NA ## 4 4 3/15/20 0 0 NA NA ## 5 5 3/16/20 0 0 NA NA ## 6 6 3/17/20 0 0 NA NA ## # ℹ 12 more variables: CasosSaludNuevo &lt;dbl&gt;, IncCasosSaludNuevo &lt;dbl&gt;, ## # HospitCOV19 &lt;dbl&gt;, CamasICU &lt;dbl&gt;, CamasICU_disp &lt;dbl&gt;, Ventiladores &lt;dbl&gt;, ## # MuertesSalud &lt;dbl&gt;, IncMueSalud &lt;dbl&gt;, VacDoses &lt;dbl&gt;, VacAdm &lt;dbl&gt;, ## # N1MoreDoses &lt;dbl&gt;, N2Doses &lt;dbl&gt; Code tail(url_COVID) ## # A tibble: 6 × 18 ## ...1 Fecha Muertes IncrementoMuertes CasosPCR_Salud IncCasosPCR_Salud ## &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 582 10/14/21 3205 4 150812 181 ## 2 583 10/15/21 3207 2 150892 80 ## 3 584 10/16/21 3207 0 150969 77 ## 4 585 10/17/21 3207 0 151027 58 ## 5 586 10/18/21 3209 2 151033 6 ## 6 587 10/19/21 3213 4 151089 56 ## # ℹ 12 more variables: CasosSaludNuevo &lt;dbl&gt;, IncCasosSaludNuevo &lt;dbl&gt;, ## # HospitCOV19 &lt;dbl&gt;, CamasICU &lt;dbl&gt;, CamasICU_disp &lt;dbl&gt;, Ventiladores &lt;dbl&gt;, ## # MuertesSalud &lt;dbl&gt;, IncMueSalud &lt;dbl&gt;, VacDoses &lt;dbl&gt;, VacAdm &lt;dbl&gt;, ## # N1MoreDoses &lt;dbl&gt;, N2Doses &lt;dbl&gt; Code url_COVID %&gt;% select(IncrementoMuertes) %&gt;% summarise(Prom_muerte_dia = mean(IncrementoMuertes, na.rm = TRUE), maximo_muerte_dia = max(IncrementoMuertes, na.rm = TRUE)) ## # A tibble: 1 × 2 ## Prom_muerte_dia maximo_muerte_dia ## &lt;dbl&gt; &lt;dbl&gt; ## 1 5.47 29 arrange() Code vuelos %&gt;% select(horario_salida) %&gt;% arrange() ## # A tibble: 336,776 × 1 ## horario_salida ## &lt;int&gt; ## 1 517 ## 2 533 ## 3 542 ## 4 544 ## 5 554 ## 6 554 ## 7 555 ## 8 557 ## 9 557 ## 10 558 ## # ℹ 336,766 more rows Code vuelos %&gt;% arrange(desc(horario_salida)) ## # A tibble: 336,776 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 10 30 2400 2359 1 ## 2 2013 11 27 2400 2359 1 ## 3 2013 12 5 2400 2359 1 ## 4 2013 12 9 2400 2359 1 ## 5 2013 12 9 2400 2250 70 ## 6 2013 12 13 2400 2359 1 ## 7 2013 12 19 2400 2359 1 ## 8 2013 12 29 2400 1700 420 ## 9 2013 2 7 2400 2359 1 ## 10 2013 2 7 2400 2359 1 ## # ℹ 336,766 more rows ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; 5.3.1 Ejercicios Ordena vuelos para encontrar los vuelos más retrasados en salida. Code ?vuelos vuelos %&gt;% select(atraso_llegada, horario_salida) %&gt;% arrange(atraso_llegada, desc(horario_salida)) ## # A tibble: 336,776 × 2 ## atraso_llegada horario_salida ## &lt;dbl&gt; &lt;int&gt; ## 1 -86 1715 ## 2 -79 719 ## 3 -75 1947 ## 4 -75 1826 ## 5 -74 1816 ## 6 -73 1926 ## 7 -71 2054 ## 8 -71 1753 ## 9 -71 657 ## 10 -70 1801 ## # ℹ 336,766 more rows Encuentra los vuelos que salieron más temprano. Code vuelos %&gt;% select(horario_salida) %&gt;% filter(horario_salida &gt;= 600) %&gt;% filter(horario_salida &gt; 2400) ## # A tibble: 0 × 1 ## # ℹ 1 variable: horario_salida &lt;int&gt; Code names(vuelos) ## [1] &quot;anio&quot; &quot;mes&quot; &quot;dia&quot; ## [4] &quot;horario_salida&quot; &quot;salida_programada&quot; &quot;atraso_salida&quot; ## [7] &quot;horario_llegada&quot; &quot;llegada_programada&quot; &quot;atraso_llegada&quot; ## [10] &quot;aerolinea&quot; &quot;vuelo&quot; &quot;codigo_cola&quot; ## [13] &quot;origen&quot; &quot;destino&quot; &quot;tiempo_vuelo&quot; ## [16] &quot;distancia&quot; &quot;hora&quot; &quot;minuto&quot; ## [19] &quot;fecha_hora&quot; Code vuelos %&gt;% select(atraso_salida) %&gt;% arrange(atraso_salida) ## # A tibble: 336,776 × 1 ## atraso_salida ## &lt;dbl&gt; ## 1 -43 ## 2 -33 ## 3 -32 ## 4 -30 ## 5 -27 ## 6 -26 ## 7 -25 ## 8 -25 ## 9 -24 ## 10 -24 ## # ℹ 336,766 more rows Ordena vuelos para encontrar los vuelos más rápidos (que viajaron a mayor velocidad). Code vuelos %&gt;% mutate(velocidad=distancia/tiempo_vuelo) %&gt;% arrange(desc(velocidad)) ## # A tibble: 336,776 × 20 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 5 25 1709 1700 9 ## 2 2013 7 2 1558 1513 45 ## 3 2013 5 13 2040 2025 15 ## 4 2013 3 23 1914 1910 4 ## 5 2013 1 12 1559 1600 -1 ## 6 2013 11 17 650 655 -5 ## 7 2013 2 21 2355 2358 -3 ## 8 2013 11 17 759 800 -1 ## 9 2013 11 16 2003 1925 38 ## 10 2013 11 16 2349 2359 -10 ## # ℹ 336,766 more rows ## # ℹ 14 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt;, velocidad &lt;dbl&gt; ¿Cuáles vuelos viajaron más lejos? Code vuelos %&gt;% arrange(desc(distancia)) ## # A tibble: 336,776 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 857 900 -3 ## 2 2013 1 2 909 900 9 ## 3 2013 1 3 914 900 14 ## 4 2013 1 4 900 900 0 ## 5 2013 1 5 858 900 -2 ## 6 2013 1 6 1019 900 79 ## 7 2013 1 7 1042 900 102 ## 8 2013 1 8 901 900 1 ## 9 2013 1 9 641 900 1301 ## 10 2013 1 10 859 900 -1 ## # ℹ 336,766 more rows ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; ¿Cuál viajó más cerca? Code vuelos %&gt;% arrange(distancia) ## # A tibble: 336,776 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 7 27 NA 106 NA ## 2 2013 1 3 2127 2129 -2 ## 3 2013 1 4 1240 1200 40 ## 4 2013 1 4 1829 1615 134 ## 5 2013 1 4 2128 2129 -1 ## 6 2013 1 5 1155 1200 -5 ## 7 2013 1 6 2125 2129 -4 ## 8 2013 1 7 2124 2129 -5 ## 9 2013 1 8 2127 2130 -3 ## 10 2013 1 9 2126 2129 -3 ## # ℹ 336,766 more rows ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; Otra función desc() Ejercicios: Hacer los ejercicios en la sección 5.3.1 del libro en español Otras funciones: starts_with() ends_with() contains() matches(“(.)\\1”) # paquete STRING rename() everything() 5.3 starts_with(), ends_with() Es una función para seleccionar basado Code names(vuelos) ## [1] &quot;anio&quot; &quot;mes&quot; &quot;dia&quot; ## [4] &quot;horario_salida&quot; &quot;salida_programada&quot; &quot;atraso_salida&quot; ## [7] &quot;horario_llegada&quot; &quot;llegada_programada&quot; &quot;atraso_llegada&quot; ## [10] &quot;aerolinea&quot; &quot;vuelo&quot; &quot;codigo_cola&quot; ## [13] &quot;origen&quot; &quot;destino&quot; &quot;tiempo_vuelo&quot; ## [16] &quot;distancia&quot; &quot;hora&quot; &quot;minuto&quot; ## [19] &quot;fecha_hora&quot; Code vuelos %&gt;% select(horario_salida) ## # A tibble: 336,776 × 1 ## horario_salida ## &lt;int&gt; ## 1 517 ## 2 533 ## 3 542 ## 4 544 ## 5 554 ## 6 554 ## 7 555 ## 8 557 ## 9 557 ## 10 558 ## # ℹ 336,766 more rows Code vuelos %&gt;% select(starts_with(&quot;horario&quot;)) ## # A tibble: 336,776 × 2 ## horario_salida horario_llegada ## &lt;int&gt; &lt;int&gt; ## 1 517 830 ## 2 533 850 ## 3 542 923 ## 4 544 1004 ## 5 554 812 ## 6 554 740 ## 7 555 913 ## 8 557 709 ## 9 557 838 ## 10 558 753 ## # ℹ 336,766 more rows Code vuelos %&gt;% select(ends_with(&quot;salida&quot;)) ## # A tibble: 336,776 × 2 ## horario_salida atraso_salida ## &lt;int&gt; &lt;dbl&gt; ## 1 517 2 ## 2 533 4 ## 3 542 2 ## 4 544 -1 ## 5 554 -6 ## 6 554 -4 ## 7 555 -5 ## 8 557 -3 ## 9 557 -3 ## 10 558 -2 ## # ℹ 336,766 more rows Code vuelos %&gt;% select(contains(&quot;hora&quot;)) ## # A tibble: 336,776 × 4 ## horario_salida horario_llegada hora fecha_hora ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dttm&gt; ## 1 517 830 5 2013-01-01 05:00:00 ## 2 533 850 5 2013-01-01 05:00:00 ## 3 542 923 5 2013-01-01 05:00:00 ## 4 544 1004 5 2013-01-01 05:00:00 ## 5 554 812 6 2013-01-01 06:00:00 ## 6 554 740 5 2013-01-01 05:00:00 ## 7 555 913 6 2013-01-01 06:00:00 ## 8 557 709 6 2013-01-01 06:00:00 ## 9 557 838 6 2013-01-01 06:00:00 ## 10 558 753 6 2013-01-01 06:00:00 ## # ℹ 336,766 more rows 5.4 rename() Cambiar el nombre de la columna Code vuelos %&gt;% rename(aeropuerto_origen=origen) %&gt;% rename(areop_distino=destino)# nombre nuevo= nombre original ## # A tibble: 336,776 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 542 540 2 ## 4 2013 1 1 544 545 -1 ## 5 2013 1 1 554 600 -6 ## 6 2013 1 1 554 558 -4 ## 7 2013 1 1 555 600 -5 ## 8 2013 1 1 557 600 -3 ## 9 2013 1 1 557 600 -3 ## 10 2013 1 1 558 600 -2 ## # ℹ 336,766 more rows ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # aeropuerto_origen &lt;chr&gt;, areop_distino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, ## # distancia &lt;dbl&gt;, hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; 5.5 Reoganizar el oden de las columnas Code head(vuelos) ## # A tibble: 6 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 542 540 2 ## 4 2013 1 1 544 545 -1 ## 5 2013 1 1 554 600 -6 ## 6 2013 1 1 554 558 -4 ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; Code vuelos %&gt;% select(distancia, aerolinea, everything()) ## # A tibble: 336,776 × 19 ## distancia aerolinea anio mes dia horario_salida salida_programada ## &lt;dbl&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; ## 1 1400 UA 2013 1 1 517 515 ## 2 1416 UA 2013 1 1 533 529 ## 3 1089 AA 2013 1 1 542 540 ## 4 1576 B6 2013 1 1 544 545 ## 5 762 DL 2013 1 1 554 600 ## 6 719 UA 2013 1 1 554 558 ## 7 1065 B6 2013 1 1 555 600 ## 8 229 EV 2013 1 1 557 600 ## 9 944 B6 2013 1 1 557 600 ## 10 733 AA 2013 1 1 558 600 ## # ℹ 336,766 more rows ## # ℹ 12 more variables: atraso_salida &lt;dbl&gt;, horario_llegada &lt;int&gt;, ## # llegada_programada &lt;int&gt;, atraso_llegada &lt;dbl&gt;, vuelo &lt;int&gt;, ## # codigo_cola &lt;chr&gt;, origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; 5.6 matches(“(.)\\1”) Lo veremos en la leccion de “STRING” Ejercicios: Hacer los ejercicios en la sección 5.4.1 del libro en español Otras funciones: mutate() Code library(nycflights13) head(flights) ## # A tibble: 6 × 19 ## year month day dep_time sched_dep_time dep_delay arr_time sched_arr_time ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; ## 1 2013 1 1 517 515 2 830 819 ## 2 2013 1 1 533 529 4 850 830 ## 3 2013 1 1 542 540 2 923 850 ## 4 2013 1 1 544 545 -1 1004 1022 ## 5 2013 1 1 554 600 -6 812 837 ## 6 2013 1 1 554 558 -4 740 728 ## # ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;, ## # tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;, ## # hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt; Code library(tidyverse) flights_sml &lt;- select(flights, year:day, ends_with(&quot;delay&quot;), distance, air_time ) head(flights_sml) ## # A tibble: 6 × 7 ## year month day dep_delay arr_delay distance air_time ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 2013 1 1 2 11 1400 227 ## 2 2013 1 1 4 20 1416 227 ## 3 2013 1 1 2 33 1089 160 ## 4 2013 1 1 -1 -18 1576 183 ## 5 2013 1 1 -6 -25 762 116 ## 6 2013 1 1 -4 12 719 150 Code mutate(flights_sml, gain = dep_delay - arr_delay, speed = distance / air_time * 60 ) ## # A tibble: 336,776 × 9 ## year month day dep_delay arr_delay distance air_time gain speed ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 2013 1 1 2 11 1400 227 -9 370. ## 2 2013 1 1 4 20 1416 227 -16 374. ## 3 2013 1 1 2 33 1089 160 -31 408. ## 4 2013 1 1 -1 -18 1576 183 17 517. ## 5 2013 1 1 -6 -25 762 116 19 394. ## 6 2013 1 1 -4 12 719 150 -16 288. ## 7 2013 1 1 -5 19 1065 158 -24 404. ## 8 2013 1 1 -3 -14 229 53 11 259. ## 9 2013 1 1 -3 -8 944 140 5 405. ## 10 2013 1 1 -2 8 733 138 -10 319. ## # ℹ 336,766 more rows 5.7 Hagan lo con el data set en espanol Code names(vuelos) ## [1] &quot;anio&quot; &quot;mes&quot; &quot;dia&quot; ## [4] &quot;horario_salida&quot; &quot;salida_programada&quot; &quot;atraso_salida&quot; ## [7] &quot;horario_llegada&quot; &quot;llegada_programada&quot; &quot;atraso_llegada&quot; ## [10] &quot;aerolinea&quot; &quot;vuelo&quot; &quot;codigo_cola&quot; ## [13] &quot;origen&quot; &quot;destino&quot; &quot;tiempo_vuelo&quot; ## [16] &quot;distancia&quot; &quot;hora&quot; &quot;minuto&quot; ## [19] &quot;fecha_hora&quot; Code vuelos_sml &lt;- select(vuelos, anio:dia, starts_with(&quot;atraso&quot;), distancia, tiempo_vuelo ) head(vuelos_sml) ## # A tibble: 6 × 7 ## anio mes dia atraso_salida atraso_llegada distancia tiempo_vuelo ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 2013 1 1 2 11 1400 227 ## 2 2013 1 1 4 20 1416 227 ## 3 2013 1 1 2 33 1089 160 ## 4 2013 1 1 -1 -18 1576 183 ## 5 2013 1 1 -6 -25 762 116 ## 6 2013 1 1 -4 12 719 150 Code mutate(vuelos_sml, ganado = atraso_salida - atraso_llegada, velocidad = distancia / tiempo_vuelo * 60 ) ## # A tibble: 336,776 × 9 ## anio mes dia atraso_salida atraso_llegada distancia tiempo_vuelo ganado ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 2013 1 1 2 11 1400 227 -9 ## 2 2013 1 1 4 20 1416 227 -16 ## 3 2013 1 1 2 33 1089 160 -31 ## 4 2013 1 1 -1 -18 1576 183 17 ## 5 2013 1 1 -6 -25 762 116 19 ## 6 2013 1 1 -4 12 719 150 -16 ## 7 2013 1 1 -5 19 1065 158 -24 ## 8 2013 1 1 -3 -14 229 53 11 ## 9 2013 1 1 -3 -8 944 140 5 ## 10 2013 1 1 -2 8 733 138 -10 ## # ℹ 336,766 more rows ## # ℹ 1 more variable: velocidad &lt;dbl&gt; 5.8 transmute() Para guardar solamente la nueva variable usa transmutate Code transmute(flights, gain = dep_delay - arr_delay, hours = air_time / 60, gain_per_hour = gain / hours ) ## # A tibble: 336,776 × 3 ## gain hours gain_per_hour ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 -9 3.78 -2.38 ## 2 -16 3.78 -4.23 ## 3 -31 2.67 -11.6 ## 4 17 3.05 5.57 ## 5 19 1.93 9.83 ## 6 -16 2.5 -6.4 ## 7 -24 2.63 -9.11 ## 8 11 0.883 12.5 ## 9 5 2.33 2.14 ## 10 -10 2.3 -4.35 ## # ℹ 336,766 more rows Hagan lo con “vuelos” 5.9 lag() Para calcular diferencias entre variables en la misma columna Code #set.seed(12345) # que los datos sean al azar, siempre sean los mismo, se usa el &quot;set.seed()&quot; para enseñanza. #rnorm() DATOS CON DISTRIBUCION NORMAL rpois(7, 2) ## [1] 1 2 1 4 1 1 3 Code data=rpois(14, 10) df=as.tibble(data) ## Warning: `as.tibble()` was deprecated in tibble 2.0.0. ## ℹ Please use `as_tibble()` instead. ## ℹ The signature and semantics have changed, see `?as_tibble`. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated. Code df ## # A tibble: 14 × 1 ## value ## &lt;int&gt; ## 1 15 ## 2 7 ## 3 6 ## 4 7 ## 5 8 ## 6 12 ## 7 13 ## 8 9 ## 9 10 ## 10 4 ## 11 7 ## 12 13 ## 13 8 ## 14 9 Code df %&gt;% select(value) %&gt;% mutate(lag1=lag(value)) %&gt;% mutate(lag3=lag(value, 3)) %&gt;% mutate(lag7=lag(value,7)) ## # A tibble: 14 × 4 ## value lag1 lag3 lag7 ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; ## 1 15 NA NA NA ## 2 7 15 NA NA ## 3 6 7 NA NA ## 4 7 6 15 NA ## 5 8 7 7 NA ## 6 12 8 6 NA ## 7 13 12 7 NA ## 8 9 13 8 15 ## 9 10 9 12 7 ## 10 4 10 13 6 ## 11 7 4 9 7 ## 12 13 7 10 8 ## 13 8 13 4 12 ## 14 9 8 7 13 Code df%&gt;% select(value) %&gt;% mutate(Change_df=value-lag(value, 7)) # El cambio en los valores entre celdas ## # A tibble: 14 × 2 ## value Change_df ## &lt;int&gt; &lt;int&gt; ## 1 15 NA ## 2 7 NA ## 3 6 NA ## 4 7 NA ## 5 8 NA ## 6 12 NA ## 7 13 NA ## 8 9 -6 ## 9 10 3 ## 10 4 -2 ## 11 7 0 ## 12 13 5 ## 13 8 -4 ## 14 9 -4 5.10 Usa “Lag” con “IncCasosSaludNuevo” en COVID-19 PR Evalua la diferencia en números de casos entre 7 días de las semana en números de casos nuevos de COVID, “IncCasosSaludNuevo” Code library(readr) library(dplyr) #names(url_COVID_PR) url_COVID_PR &lt;- read_csv(&quot;Datos/url_COVID_PR.csv&quot;) ## New names: ## Rows: 587 Columns: 18 ## ── Column specification ## ──────────────────────────────────────────────────────── Delimiter: &quot;,&quot; chr ## (1): Fecha dbl (17): ...1, Muertes, IncrementoMuertes, CasosPCR_Salud, ## IncCasosPCR_Salu... ## ℹ Use `spec()` to retrieve the full column specification for this data. ℹ ## Specify the column types or set `show_col_types = FALSE` to quiet this message. ## • `` -&gt; `...1` Code #head(url_COVID_PR) #names(url_COVID_PR) df2=url_COVID_PR %&gt;% select(IncCasosSaludNuevo) %&gt;% mutate(Cambios_Casos=IncCasosSaludNuevo-lag(IncCasosSaludNuevo,7)) df2 ## # A tibble: 587 × 2 ## IncCasosSaludNuevo Cambios_Casos ## &lt;dbl&gt; &lt;dbl&gt; ## 1 2 NA ## 2 3 NA ## 3 3 NA ## 4 0 NA ## 5 9 NA ## 6 7 NA ## 7 6 NA ## 8 5 3 ## 9 14 11 ## 10 12 9 ## # ℹ 577 more rows Code df2 %&gt;% select(IncCasosSaludNuevo, Cambios_Casos) %&gt;% colMeans(na.rm=TRUE) ## IncCasosSaludNuevo Cambios_Casos ## 257.8310580 0.4507772 Code #df2 %&gt;% # select() # slice(na.rm=TRUE) # lets you index rows by their (integer) locations. It allows you to select, remove, and duplicate rows. It is accompanied by a number of helpers for common use cases 5.11 lead(), is the “next” (lead()) values in a vector/column Code set.seed(12345) data=rpois(15, 10) df=as.tibble(data) df ## # A tibble: 15 × 1 ## value ## &lt;int&gt; ## 1 11 ## 2 12 ## 3 9 ## 4 8 ## 5 11 ## 6 4 ## 7 11 ## 8 7 ## 9 8 ## 10 11 ## 11 9 ## 12 10 ## 13 9 ## 14 11 ## 15 13 Code df %&gt;% select(value) %&gt;% mutate(lead1=lead(value)) %&gt;% mutate(lead3=lead(value, 3)) ## # A tibble: 15 × 3 ## value lead1 lead3 ## &lt;int&gt; &lt;int&gt; &lt;int&gt; ## 1 11 12 8 ## 2 12 9 11 ## 3 9 8 4 ## 4 8 11 11 ## 5 11 4 7 ## 6 4 11 8 ## 7 11 7 11 ## 8 7 8 9 ## 9 8 11 10 ## 10 11 9 9 ## 11 9 10 11 ## 12 10 9 13 ## 13 9 11 NA ## 14 11 13 NA ## 15 13 NA NA Code # Calculate the change in value from one (1) time period and four (4) time periods df%&gt;% select(value) %&gt;% mutate(lead1=value-lead(value)) %&gt;% mutate(lead7=value-lead(value, 7)) ## # A tibble: 15 × 3 ## value lead1 lead7 ## &lt;int&gt; &lt;int&gt; &lt;int&gt; ## 1 11 -1 4 ## 2 12 3 4 ## 3 9 1 -2 ## 4 8 -3 -1 ## 5 11 7 1 ## 6 4 -7 -5 ## 7 11 4 0 ## 8 7 -1 -6 ## 9 8 -3 NA ## 10 11 2 NA ## 11 9 -1 NA ## 12 10 1 NA ## 13 9 -2 NA ## 14 11 -2 NA ## 15 13 NA NA 5.12 cumsum Cumulative Sum: the values are sum along the vector or column Code x &lt;- sample(1:15, 10, replace=TRUE) x ## [1] 14 2 4 11 12 9 9 4 8 11 Code df=as.tibble(x) df ## # A tibble: 10 × 1 ## value ## &lt;int&gt; ## 1 14 ## 2 2 ## 3 4 ## 4 11 ## 5 12 ## 6 9 ## 7 9 ## 8 4 ## 9 8 ## 10 11 Code df %&gt;% select(value) %&gt;% mutate(suma=cumsum(value)) ## # A tibble: 10 × 2 ## value suma ## &lt;int&gt; &lt;int&gt; ## 1 14 14 ## 2 2 16 ## 3 4 20 ## 4 11 31 ## 5 12 43 ## 6 9 52 ## 7 9 61 ## 8 4 65 ## 9 8 73 ## 10 11 84 Code url_COVID_PR &lt;- read_csv(&quot;Datos/url_COVID_PR.csv&quot;) ## New names: ## Rows: 587 Columns: 18 ## ── Column specification ## ──────────────────────────────────────────────────────── Delimiter: &quot;,&quot; chr ## (1): Fecha dbl (17): ...1, Muertes, IncrementoMuertes, CasosPCR_Salud, ## IncCasosPCR_Salu... ## ℹ Use `spec()` to retrieve the full column specification for this data. ℹ ## Specify the column types or set `show_col_types = FALSE` to quiet this message. ## • `` -&gt; `...1` Code head(url_COVID_PR) ## # A tibble: 6 × 18 ## ...1 Fecha Muertes IncrementoMuertes CasosPCR_Salud IncCasosPCR_Salud ## &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 3/12/20 0 0 NA NA ## 2 2 3/13/20 0 0 NA NA ## 3 3 3/14/20 0 0 NA NA ## 4 4 3/15/20 0 0 NA NA ## 5 5 3/16/20 0 0 NA NA ## 6 6 3/17/20 0 0 NA NA ## # ℹ 12 more variables: CasosSaludNuevo &lt;dbl&gt;, IncCasosSaludNuevo &lt;dbl&gt;, ## # HospitCOV19 &lt;dbl&gt;, CamasICU &lt;dbl&gt;, CamasICU_disp &lt;dbl&gt;, Ventiladores &lt;dbl&gt;, ## # MuertesSalud &lt;dbl&gt;, IncMueSalud &lt;dbl&gt;, VacDoses &lt;dbl&gt;, VacAdm &lt;dbl&gt;, ## # N1MoreDoses &lt;dbl&gt;, N2Doses &lt;dbl&gt; Code url_COVID_PR %&gt;% select(IncCasosSaludNuevo, CasosSaludNuevo) %&gt;% mutate(suma=cumsum(IncCasosSaludNuevo)) ## # A tibble: 587 × 3 ## IncCasosSaludNuevo CasosSaludNuevo suma ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 2 2 2 ## 2 3 5 5 ## 3 3 8 8 ## 4 0 8 8 ## 5 9 17 17 ## 6 7 24 24 ## 7 6 30 30 ## 8 5 35 35 ## 9 14 49 49 ## 10 12 61 61 ## # ℹ 577 more rows 5.13 cummean() and cumvar() The mean of the values are calculated Cummulative mean Code set.seed(678) x &lt;- sample(1:20, 15) x ## [1] 6 9 14 16 4 12 13 8 10 1 19 11 17 3 7 Code df=as.tibble(x) df ## # A tibble: 15 × 1 ## value ## &lt;int&gt; ## 1 6 ## 2 9 ## 3 14 ## 4 16 ## 5 4 ## 6 12 ## 7 13 ## 8 8 ## 9 10 ## 10 1 ## 11 19 ## 12 11 ## 13 17 ## 14 3 ## 15 7 Code mean(df$value) ## [1] 10 Code library(MASS) ## ## Attaching package: &#39;MASS&#39; ## The following object is masked from &#39;package:dplyr&#39;: ## ## select Code df3=df %&gt;% dplyr::select(value) %&gt;% mutate(Prom_cum=cummean(value)) %&gt;% mutate(Var_cum=cumstats::cumvar(value)) # activar el paquete cumstats library(cumstats) ## ## Attaching package: &#39;cumstats&#39; ## The following object is masked from &#39;package:dplyr&#39;: ## ## cummean Code df3=df %&gt;% dplyr::select(value) %&gt;% mutate(Prom_cum=cummean(value)) %&gt;% mutate(Var_cum=cumvar(value)) df3 ## # A tibble: 15 × 3 ## value Prom_cum Var_cum ## &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 6 6 NA ## 2 9 7.5 4.5 ## 3 14 9.67 16.3 ## 4 16 11.2 20.9 ## 5 4 9.8 26.2 ## 6 12 10.2 21.8 ## 7 13 10.6 19.3 ## 8 8 10.2 17.4 ## 9 10 10.2 15.2 ## 10 1 9.3 22.0 ## 11 19 10.2 28.4 ## 12 11 10.2 25.8 ## 13 17 10.8 27.2 ## 14 3 10.2 29.4 ## 15 7 10 28 NO parametricas pruebas (no son basado en distribucion normal) 5.14 min_rank() y # min_rank(desc()) Asignar valores de rangos a los valores originales o de más grande a meas pequeño o vise versa. Code set.seed(45678) x &lt;- sample(1:50, 10) x ## [1] 22 1 36 46 7 39 34 10 24 30 Code df=as.tibble(x) df ## # A tibble: 10 × 1 ## value ## &lt;int&gt; ## 1 22 ## 2 1 ## 3 36 ## 4 46 ## 5 7 ## 6 39 ## 7 34 ## 8 10 ## 9 24 ## 10 30 Code df %&gt;% dplyr::select(value) %&gt;% mutate(rango_minimo=min_rank(value)) %&gt;% mutate(rango_min_desc=min_rank(desc(value)) ) ## # A tibble: 10 × 3 ## value rango_minimo rango_min_desc ## &lt;int&gt; &lt;int&gt; &lt;int&gt; ## 1 22 4 7 ## 2 1 1 10 ## 3 36 8 3 ## 4 46 10 1 ## 5 7 2 9 ## 6 39 9 2 ## 7 34 7 4 ## 8 10 3 8 ## 9 24 5 6 ## 10 30 6 5 5.15 row_number() Qué hace esta función? Code set.seed(45678) x &lt;- c(10,21,22,NA,5,4) x ## [1] 10 21 22 NA 5 4 Code df=as.tibble(x) df ## # A tibble: 6 × 1 ## value ## &lt;dbl&gt; ## 1 10 ## 2 21 ## 3 22 ## 4 NA ## 5 5 ## 6 4 Code df %&gt;% dplyr::select(value) %&gt;% mutate(row=row_number(value)) # equivalente a rank, ## # A tibble: 6 × 2 ## value row ## &lt;dbl&gt; &lt;int&gt; ## 1 10 3 ## 2 21 4 ## 3 22 5 ## 4 NA NA ## 5 5 2 ## 6 4 1 5.16 dense_rank() Code set.seed(45678) x &lt;- c(10,12,12,NA,51,4) x ## [1] 10 12 12 NA 51 4 Code df=as.tibble(x) df ## # A tibble: 6 × 1 ## value ## &lt;dbl&gt; ## 1 10 ## 2 12 ## 3 12 ## 4 NA ## 5 51 ## 6 4 Code df %&gt;% dplyr::select(value) %&gt;% mutate(dense=dense_rank(value)) # equivalente a rank, NOTA que los NA son asignado un valor ## # A tibble: 6 × 2 ## value dense ## &lt;dbl&gt; &lt;int&gt; ## 1 10 2 ## 2 12 3 ## 3 12 3 ## 4 NA NA ## 5 51 4 ## 6 4 1 Code Num_frutos1=c(0,0,0,0,0,1,1,2,4,5,6,1000000) NF1=as.tibble(Num_frutos1) NF1 ## # A tibble: 12 × 1 ## value ## &lt;dbl&gt; ## 1 0 ## 2 0 ## 3 0 ## 4 0 ## 5 0 ## 6 1 ## 7 1 ## 8 2 ## 9 4 ## 10 5 ## 11 6 ## 12 1000000 Code Num_frutos2=c(0,0,0,0,0,1,1,2,4,5,6,10) mean(Num_frutos1) ## [1] 83334.92 Code mean(Num_frutos2) ## [1] 2.416667 Start here…. 5.17 percent_rank() Code set.seed(45678) x &lt;- c(1,2,2,NA,5,4) x ## [1] 1 2 2 NA 5 4 Code df=as.tibble(x) df ## # A tibble: 6 × 1 ## value ## &lt;dbl&gt; ## 1 1 ## 2 2 ## 3 2 ## 4 NA ## 5 5 ## 6 4 Code NF1 %&gt;% dplyr::select(value) %&gt;% mutate(porcentaje_rank=percent_rank(value)) # equivalente a rank, Un número entre a 0 y 1 calculado haciendo una re-escala de los valores usando min_rank to [0, 1]. NOTA que el valor más pequeño es reasignado un valor de 0 y el más grande un valor de 1. ## # A tibble: 12 × 2 ## value porcentaje_rank ## &lt;dbl&gt; &lt;dbl&gt; ## 1 0 0 ## 2 0 0 ## 3 0 0 ## 4 0 0 ## 5 0 0 ## 6 1 0.455 ## 7 1 0.455 ## 8 2 0.636 ## 9 4 0.727 ## 10 5 0.818 ## 11 6 0.909 ## 12 1000000 1 Code set.seed(45678) x2 &lt;- sample(1:50, 7) x2 ## [1] 22 1 36 46 7 39 34 Code df2=as.tibble(x2) df2 ## # A tibble: 7 × 1 ## value ## &lt;int&gt; ## 1 22 ## 2 1 ## 3 36 ## 4 46 ## 5 7 ## 6 39 ## 7 34 Code df2 %&gt;% dplyr::select(value) %&gt;% mutate(porc2=percent_rank(value)) ## # A tibble: 7 × 2 ## value porc2 ## &lt;int&gt; &lt;dbl&gt; ## 1 22 0.333 ## 2 1 0 ## 3 36 0.667 ## 4 46 1 ## 5 7 0.167 ## 6 39 0.833 ## 7 34 0.5 5.18 cume_dist() Es la suma cumulativa de los rangos Code set.seed(45678) x &lt;- c(1,2,3,NA,5,4, 10, 8) x ## [1] 1 2 3 NA 5 4 10 8 Code df=as.tibble(x) df ## # A tibble: 8 × 1 ## value ## &lt;dbl&gt; ## 1 1 ## 2 2 ## 3 3 ## 4 NA ## 5 5 ## 6 4 ## 7 10 ## 8 8 Code df %&gt;% dplyr::select(value) %&gt;% mutate(rangos_cumulativo=cume_dist(value)) ## # A tibble: 8 × 2 ## value rangos_cumulativo ## &lt;dbl&gt; &lt;dbl&gt; ## 1 1 0.143 ## 2 2 0.286 ## 3 3 0.429 ## 4 NA NA ## 5 5 0.714 ## 6 4 0.571 ## 7 10 1 ## 8 8 0.857 Ejercicios: Hacer los ejercicios en la sección 5.5.2 del libro en español Encuentra los 10 vuelos más retrasados utilizando una función de ordenamiento. ¿Cómo quieres manejar los empates? Lee atentamente la documentación de min_rank(). Code names(vuelos) ## [1] &quot;anio&quot; &quot;mes&quot; &quot;dia&quot; ## [4] &quot;horario_salida&quot; &quot;salida_programada&quot; &quot;atraso_salida&quot; ## [7] &quot;horario_llegada&quot; &quot;llegada_programada&quot; &quot;atraso_llegada&quot; ## [10] &quot;aerolinea&quot; &quot;vuelo&quot; &quot;codigo_cola&quot; ## [13] &quot;origen&quot; &quot;destino&quot; &quot;tiempo_vuelo&quot; ## [16] &quot;distancia&quot; &quot;hora&quot; &quot;minuto&quot; ## [19] &quot;fecha_hora&quot; Code vuelos%&gt;% dplyr::select(atraso_salida)%&gt;% arrange(desc(atraso_salida))%&gt;% mutate(mas_atrados=min_rank(desc(atraso_salida))) %&gt;% head(n=10) ## # A tibble: 10 × 2 ## atraso_salida mas_atrados ## &lt;dbl&gt; &lt;int&gt; ## 1 1301 1 ## 2 1137 2 ## 3 1126 3 ## 4 1014 4 ## 5 1005 5 ## 6 960 6 ## 7 911 7 ## 8 899 8 ## 9 898 9 ## 10 896 10 Code names(vuelos) ## [1] &quot;anio&quot; &quot;mes&quot; &quot;dia&quot; ## [4] &quot;horario_salida&quot; &quot;salida_programada&quot; &quot;atraso_salida&quot; ## [7] &quot;horario_llegada&quot; &quot;llegada_programada&quot; &quot;atraso_llegada&quot; ## [10] &quot;aerolinea&quot; &quot;vuelo&quot; &quot;codigo_cola&quot; ## [13] &quot;origen&quot; &quot;destino&quot; &quot;tiempo_vuelo&quot; ## [16] &quot;distancia&quot; &quot;hora&quot; &quot;minuto&quot; ## [19] &quot;fecha_hora&quot; Code vuelos %&gt;% arrange(atraso_salida) %&gt;% mutate(rango_minimo=min_rank(atraso_salida)) %&gt;% head(n=10) ## # A tibble: 10 × 20 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 12 7 2040 2123 -43 ## 2 2013 2 3 2022 2055 -33 ## 3 2013 11 10 1408 1440 -32 ## 4 2013 1 11 1900 1930 -30 ## 5 2013 1 29 1703 1730 -27 ## 6 2013 8 9 729 755 -26 ## 7 2013 10 23 1907 1932 -25 ## 8 2013 3 30 2030 2055 -25 ## 9 2013 3 2 1431 1455 -24 ## 10 2013 5 5 934 958 -24 ## # ℹ 14 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt;, rango_minimo &lt;int&gt; 5.19 Resúmenes con summarise() by group using group_by() Code library(datos) library(nycflights13) summarise(flights, delay = mean(dep_delay, na.rm = TRUE)) ## # A tibble: 1 × 1 ## delay ## &lt;dbl&gt; ## 1 12.6 Code flights %&gt;% summarise(delay = mean(dep_delay, na.rm = TRUE)) ## # A tibble: 1 × 1 ## delay ## &lt;dbl&gt; ## 1 12.6 Code by_day &lt;- group_by(flights, year, month, day) summarise(by_day, delay = mean(dep_delay, na.rm = TRUE)) ## `summarise()` has grouped output by &#39;year&#39;, &#39;month&#39;. You can override using the ## `.groups` argument. ## # A tibble: 365 × 4 ## # Groups: year, month [12] ## year month day delay ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 11.5 ## 2 2013 1 2 13.9 ## 3 2013 1 3 11.0 ## 4 2013 1 4 8.95 ## 5 2013 1 5 5.73 ## 6 2013 1 6 7.15 ## 7 2013 1 7 5.42 ## 8 2013 1 8 2.55 ## 9 2013 1 9 2.28 ## 10 2013 1 10 2.84 ## # ℹ 355 more rows Code flights %&gt;% group_by(year, month, day) %&gt;% summarise(delay = mean(dep_delay, na.rm = TRUE)) ## `summarise()` has grouped output by &#39;year&#39;, &#39;month&#39;. You can override using the ## `.groups` argument. ## # A tibble: 365 × 4 ## # Groups: year, month [12] ## year month day delay ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 11.5 ## 2 2013 1 2 13.9 ## 3 2013 1 3 11.0 ## 4 2013 1 4 8.95 ## 5 2013 1 5 5.73 ## 6 2013 1 6 7.15 ## 7 2013 1 7 5.42 ## 8 2013 1 8 2.55 ## 9 2013 1 9 2.28 ## 10 2013 1 10 2.84 ## # ℹ 355 more rows 5.20 The worst airline in departure delays Code flights %&gt;% group_by(carrier) %&gt;% summarise(delay = mean(dep_delay, na.rm = TRUE)) %&gt;% arrange(desc(delay)) ## # A tibble: 16 × 2 ## carrier delay ## &lt;chr&gt; &lt;dbl&gt; ## 1 F9 20.2 ## 2 EV 20.0 ## 3 YV 19.0 ## 4 FL 18.7 ## 5 WN 17.7 ## 6 9E 16.7 ## 7 B6 13.0 ## 8 VX 12.9 ## 9 OO 12.6 ## 10 UA 12.1 ## 11 MQ 10.6 ## 12 DL 9.26 ## 13 AA 8.59 ## 14 AS 5.80 ## 15 HA 4.90 ## 16 US 3.78 Code by_dest &lt;- group_by(flights, dest) by_dest ## # A tibble: 336,776 × 19 ## # Groups: dest [105] ## year month day dep_time sched_dep_time dep_delay arr_time sched_arr_time ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; ## 1 2013 1 1 517 515 2 830 819 ## 2 2013 1 1 533 529 4 850 830 ## 3 2013 1 1 542 540 2 923 850 ## 4 2013 1 1 544 545 -1 1004 1022 ## 5 2013 1 1 554 600 -6 812 837 ## 6 2013 1 1 554 558 -4 740 728 ## 7 2013 1 1 555 600 -5 913 854 ## 8 2013 1 1 557 600 -3 709 723 ## 9 2013 1 1 557 600 -3 838 846 ## 10 2013 1 1 558 600 -2 753 745 ## # ℹ 336,766 more rows ## # ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;, ## # tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;, ## # hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt; Code delay &lt;- summarise(by_dest, count = n(), dist = mean(distance, na.rm = TRUE), delay = mean(arr_delay, na.rm = TRUE)) delay ## # A tibble: 105 × 4 ## dest count dist delay ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 ABQ 254 1826 4.38 ## 2 ACK 265 199 4.85 ## 3 ALB 439 143 14.4 ## 4 ANC 8 3370 -2.5 ## 5 ATL 17215 757. 11.3 ## 6 AUS 2439 1514. 6.02 ## 7 AVL 275 584. 8.00 ## 8 BDL 443 116 7.05 ## 9 BGR 375 378 8.03 ## 10 BHM 297 866. 16.9 ## # ℹ 95 more rows Code #&gt; `summarise()` ungrouping output (override with `.groups` argument) delay &lt;- filter(delay, count &gt; 20, dest != &quot;HNL&quot;) # It looks like delays increase with distance up to ~750 miles # and then decrease. Maybe as flights get longer there&#39;s more # ability to make up delays in the air? ggplot(data = delay, aes(x = dist, y = delay)) + geom_point(aes(size = count), alpha = 1/3) + geom_smooth(se = FALSE) ## `geom_smooth()` using method = &#39;loess&#39; and formula = &#39;y ~ x&#39; Code #&gt; `geom_smooth()` using method = &#39;loess&#39; and formula &#39;y ~ x&#39; Start here Code names(delay) ## [1] &quot;dest&quot; &quot;count&quot; &quot;dist&quot; &quot;delay&quot; Code head(delay) ## # A tibble: 6 × 4 ## dest count dist delay ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 ABQ 254 1826 4.38 ## 2 ACK 265 199 4.85 ## 3 ALB 439 143 14.4 ## 4 ATL 17215 757. 11.3 ## 5 AUS 2439 1514. 6.02 ## 6 AVL 275 584. 8.00 Code ggplot(data = delay, aes(x = dist, y = delay, label=dest)) + geom_point() + geom_smooth(se = FALSE)+ geom_text(size=2,aes(label=dest), hjust=1, vjust=-1) ## `geom_smooth()` using method = &#39;loess&#39; and formula = &#39;y ~ x&#39; ## Warning: The following aesthetics were dropped during statistical transformation: label ## ℹ This can happen when ggplot fails to infer the correct grouping structure in ## the data. ## ℹ Did you forget to specify a `group` aesthetic or to convert a numerical ## variable into a factor? Ejercicios: Hacer los ejercicios en la sección 5.6.7 del libro en español 5.21 El Pipe %&gt;% “El pipe” 5.22 Otras funciones: NA na.rm=TRUE !is.na() = is not NA, pq al frente tiene “!” Code no_cancelados &lt;- vuelos %&gt;% filter(!is.na(atraso_salida), !is.na(atraso_llegada)) no_cancelados ## # A tibble: 327,346 × 19 ## anio mes dia horario_salida salida_programada atraso_salida ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 517 515 2 ## 2 2013 1 1 533 529 4 ## 3 2013 1 1 542 540 2 ## 4 2013 1 1 544 545 -1 ## 5 2013 1 1 554 600 -6 ## 6 2013 1 1 554 558 -4 ## 7 2013 1 1 555 600 -5 ## 8 2013 1 1 557 600 -3 ## 9 2013 1 1 557 600 -3 ## 10 2013 1 1 558 600 -2 ## # ℹ 327,336 more rows ## # ℹ 13 more variables: horario_llegada &lt;int&gt;, llegada_programada &lt;int&gt;, ## # atraso_llegada &lt;dbl&gt;, aerolinea &lt;chr&gt;, vuelo &lt;int&gt;, codigo_cola &lt;chr&gt;, ## # origen &lt;chr&gt;, destino &lt;chr&gt;, tiempo_vuelo &lt;dbl&gt;, distancia &lt;dbl&gt;, ## # hora &lt;dbl&gt;, minuto &lt;dbl&gt;, fecha_hora &lt;dttm&gt; Code no_cancelados %&gt;% group_by(anio, mes, dia) %&gt;% summarise(mean = mean(atraso_salida)) ## `summarise()` has grouped output by &#39;anio&#39;, &#39;mes&#39;. You can override using the ## `.groups` argument. ## # A tibble: 365 × 4 ## # Groups: anio, mes [12] ## anio mes dia mean ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 11.4 ## 2 2013 1 2 13.7 ## 3 2013 1 3 10.9 ## 4 2013 1 4 8.97 ## 5 2013 1 5 5.73 ## 6 2013 1 6 7.15 ## 7 2013 1 7 5.42 ## 8 2013 1 8 2.56 ## 9 2013 1 9 2.30 ## 10 2013 1 10 2.84 ## # ℹ 355 more rows Code vuelos %&gt;% group_by(anio, mes, dia) %&gt;% summarise(mean = mean(atraso_salida, na.rm=TRUE)) ## `summarise()` has grouped output by &#39;anio&#39;, &#39;mes&#39;. You can override using the ## `.groups` argument. ## # A tibble: 365 × 4 ## # Groups: anio, mes [12] ## anio mes dia mean ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 2013 1 1 11.5 ## 2 2013 1 2 13.9 ## 3 2013 1 3 11.0 ## 4 2013 1 4 8.95 ## 5 2013 1 5 5.73 ## 6 2013 1 6 7.15 ## 7 2013 1 7 5.42 ## 8 2013 1 8 2.55 ## 9 2013 1 9 2.28 ## 10 2013 1 10 2.84 ## # ℹ 355 more rows Code #, # max=max(atraso_salida,na.rm = TRUE), # n=n()) 5.23 Otras funciones: Tarea de grupo. Preparar un .rmd con la explicaciones de como utilizar la función mencionado abajo. Debe incluir La definición de la función en palabra y matemática. un script sencillo (con pocos datos) (uno o más ejemplos) para explicar la función un script con los datos de “vuelos” o de “Covid-19 de PR”. a las 2:20pm cada grupo presentará su trabajo. Despues de la clase cada grupo, mejorará su .rmd con los comentarios recibidos. Domingo se subirá el .rmd y el .html en Edmodo (cada estudiante lo subira: tendra el nombre de cada estudiante en el trabajo) El profesor revisará los trabajos y subsiguiente se distribuira los .rmd y html a los estudiantes. IQR() ## G1 mad() ## G2 first() ## G3 last() ## G3 quantile() ## G4 signif() ## G5 min() max() mean() sd() *** Ejercicios: Hacer los ejercicios en la sección 5.7.1 del libro en español Rolling average: https://stackoverflow.com/questions/743812/calculating-moving-average Code library(tidyverse) library(zoo) ## ## Attaching package: &#39;zoo&#39; ## The following objects are masked from &#39;package:base&#39;: ## ## as.Date, as.Date.numeric Code some_data = tibble(day = 1:10) some_data ## # A tibble: 10 × 1 ## day ## &lt;int&gt; ## 1 1 ## 2 2 ## 3 3 ## 4 4 ## 5 5 ## 6 6 ## 7 7 ## 8 8 ## 9 9 ## 10 10 Code # cma = centered moving average # tma = trailing moving average some_data %&gt;% mutate(cma = rollmean(day, k = 3, fill = NA)) %&gt;% mutate(tma = rollmean(day, k = 3, fill = NA, align = &quot;right&quot;)) %&gt;% mutate(lma = rollmean(day, k = 3, fill = NA, align = &quot;left&quot;)) %&gt;% mutate(cmax=rollmax(day, k=30, fill=NA)) ## # A tibble: 10 × 5 ## day cma tma lma cmax ## &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;lgl&gt; ## 1 1 NA NA 2 NA ## 2 2 2 NA 3 NA ## 3 3 3 2 4 NA ## 4 4 4 3 5 NA ## 5 5 5 4 6 NA ## 6 6 6 5 7 NA ## 7 7 7 6 8 NA ## 8 8 8 7 9 NA ## 9 9 9 8 NA NA ## 10 10 NA 9 NA NA Code some_data ## # A tibble: 10 × 1 ## day ## &lt;int&gt; ## 1 1 ## 2 2 ## 3 3 ## 4 4 ## 5 5 ## 6 6 ## 7 7 ## 8 8 ## 9 9 ## 10 10 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
